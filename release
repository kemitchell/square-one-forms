#!/bin/sh
set -e

# Parse arguments.
code="$1"
spelled="$2"
if [ -z "$code" ] || [ -z "$spelled" ]; then
  echo 'Example Usage: "1e" "First Edition"'
  exit 1
fi

# Check current branch.
branch=$(git branch --show-current)
if [ "$branch" != "main" ]; then
  echo 'Current branch is not "main"!'
  exit 1
fi

# Detach from main branch.
git checkout --detach

# Replace in Markdown files.
sed -i "s/^edition: Working Draft$/edition: $spelled/" ./*.md
sed -i "s/{{Edition Spelled}}/$spelled/g" ./*.md
sed -i "s/{{Edition Code}}/$code/g" ./*.md

# Replace in Word files.
for docx in ./*.docx; do
  real=$(realpath "$docx")
  tmp=$(mktemp -d)
  unzip "$docx" -d "$tmp"
  (
    cd "$tmp/word"
    sed -i "s/{{Edition Spelled}}/$spelled/g" document.xml
    sed -i "s/{{Edition Code}}/$code/g" document.xml
    cd ..
    zip -r "$real" ./*
  )
  rm -rf "$tmp"
done

# Create tagged commit.
git add -u
git commit -m "$spelled"
git tag "$code"

# Push.
git push origin "$code"

# Build.
make
